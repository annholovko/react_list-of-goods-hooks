{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","type","canReset","className","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA7BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAMP,EAASc,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMb,EAASgB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EAMcU,CACnBlB,EACA,CAAEM,WAAUH,eAORO,EAAO,SAACS,GACZZ,EAAYY,IAQRC,EAAWjB,GAAcG,IAAaP,EAASM,KAErD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEF,KAAK,SACLE,UAAWC,IAAG,iBAAkB,CAC9B,WAAYhB,IAAaP,EAASc,WAEpCU,QAAS,kBAAMb,EAAKX,EAASc,WAL/B,iCAUA,wBACEM,KAAK,SACLE,UAAWC,IAAG,oBAAqB,CACjC,WAAYhB,IAAaP,EAASgB,SAEpCQ,QAAS,kBAAMb,EAAKX,EAASgB,SAL/B,4BAUA,wBACEI,KAAK,SACLE,UAAWC,IAAG,oBAAqB,CACjC,YAAanB,IAEfoB,QA3CQ,WACdnB,GAAc,SAACoB,GAAD,OAAcA,MAqCxB,qBAUCJ,GACC,wBACED,KAAK,SACLE,UAAU,4BACVE,QA5CI,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAuCf,sBAUJ,6BACGG,EAAaiB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.911b1c2c.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/comma-dangle */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return good1.localeCompare(good2);\n\n      case (SortType.LENGTH):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const reverse = () => {\n    setIsReversed((current) => !current);\n  };\n\n  const sort = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const canReset = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET\n          })}\n          onClick={() => sort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== SortType.LENGTH\n          })}\n          onClick={() => sort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {canReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}